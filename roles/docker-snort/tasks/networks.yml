- name: check if MGMT network exists
  #shell: "docker network inspect -f '{{ .Name }}' vpsa-mgmt"
  shell: "docker network inspect vpsa-mgmt"
  ignore_errors: yes
  no_log: true
  register: mgmt_net_status

- name: Docker User Defined Network (vFW MGMT), when MGMT network does not exists
  shell: "docker network create --driver=bridge \
--subnet=172.22.100.0/24 --gateway=172.22.100.1 \
--ip-range=172.22.100.128/25 '{{ vl_mgmt }}'"
  when: mgmt_net_status.rc != 0


- name: check if IDS INSIDE network exists
  #shell: "docker network inspect -f '{{ .Name }}' vpsa-idsin"
  shell: "docker network inspect vpsa-idsin"
  ignore_errors: yes
  no_log: true
  register: idsin_net_status

- name: Docker User Defined Network (vIDS INSIDE)
  shell: "docker network create --driver=bridge \
--subnet=172.22.131.0/24 --gateway=172.22.131.1 \
--ip-range=172.22.131.128/25 '{{ vl_idsin }}'"
  when: idsin_net_status.rc != 0


- name: check if IDS OUTSIDE network exists
  #shell: "docker network inspect -f '{{ .Name }}' vpsa-idsout"
  shell: "docker network inspect vpsa-idsout"
  ignore_errors: yes
  no_log: true
  register: idsout_net_status

- name: Docker User Defined Network (vIDS OUTSIDE)
  shell: "docker network create --driver=bridge \
--subnet=172.22.132.0/24 --gateway=172.22.132.1 \
--ip-range=172.22.132.128/25 '{{ vl_idsout }}'"
  when: idsout_net_status.rc != 0

